version: '3.8'
services:
  tesseract-ocr:
    build:
      context: ../
      dockerfile: ./Docker/DockerOcr 
    container_name: tesseract-ocr
    ports:
      - "8082:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - paperless-network
    
  integration-tests:
    build:
      context: ../
      dockerfile: ./Docker/DockerIntegrationTests
    container_name: integration-tests
    depends_on:
      - tesseract-ocr
      - rabbitmq
      - paperless-postgres
      - elastic_search
      - minio
    networks:
      - paperless-network

  paperless-postgres:
    image: postgres:13
    container_name: paperless-postgres
    environment:
      POSTGRES_USER: mamo
      POSTGRES_PASSWORD: T1P3m!hvQ9
      POSTGRES_DB: documentsearch
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - paperless-network

  rabbitmq:
    image: rabbitmq:latest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
    container_name: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: user      
      RABBITMQ_DEFAULT_PASS: password 
    networks:
      - paperless-network

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9090"
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    networks:
      - paperless-network

  elastic_search:
    image: elasticsearch:8.7.1
    container_name: elastic_search
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
      - "xpack.security.enrollment.enabled=true"
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - paperless-network 

networks:
  paperless-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  minio-data:
    driver: local