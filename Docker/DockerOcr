FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Kopiere die gesamte Lösungsstruktur ins Image
COPY . .

# Zuerst die gesamte Lösung restoren
RUN dotnet restore "WebApplicationSWEN3.sln"

# Jetzt das TesseractOcr-Projekt bauen
RUN dotnet build "TesseractOcr/TesseractOcr.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "TesseractOcr/TesseractOcr.csproj" -c Release -o /app/publish

FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS final
WORKDIR /app

# Tesseract und Dependencies installieren
RUN apt-get update && apt-get install -y --no-install-recommends \
    libleptonica-dev \
    libtesseract-dev \
    ghostscript \
    tesseract-ocr \
    tesseract-ocr-eng \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app/x64

RUN ln -s /usr/lib/x86_64-linux-gnu/libdl.so.2 /usr/lib/x86_64-linux-gnu/libdl.so && \
    ln -s /usr/lib/x86_64-linux-gnu/liblept.so.5 /app/x64/libleptonica-1.82.0.so && \
    ln -s /usr/lib/x86_64-linux-gnu/libtesseract.so.5 /app/x64/libtesseract50.so

WORKDIR /app

ENV TESSDATA_PREFIX=/usr/share/tesseract-ocr/5/tessdata/

# Publish-Output aus dem vorherigen Stage kopieren
COPY --from=publish /app/publish .

# Start
ENTRYPOINT ["dotnet", "TesseractOcr.dll"]
